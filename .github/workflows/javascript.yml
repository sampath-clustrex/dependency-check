name: JavaScript Dependency and Vulnerability Check

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - test

jobs:
  Javascript-check:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install npm tools
      - name: Install npm tools
        run: |
          npm install -g npm-check-updates

      # Generate package-lock.json if it doesn't exist
      - name: Ensure package-lock.json exists
        run: |
          npm install --package-lock-only || true

      # Check JavaScript outdated packages
      - name: Check JavaScript outdated packages
        run: |
          ncu --upgrade --jsonUpgraded > js_outdated.json || true
          cat js_outdated.json
          if [ -s js_outdated.json ]; then
            echo "Outdated JavaScript packages detected with latest versions available:"
            cat js_outdated.json
            exit 1
          else
            echo "All JavaScript packages are up to date."
          fi

      - name: Check JavaScript vulnerabilities
        run: |
          npm audit --json > npm_audit.json || true
          
          # Print the audit summary
          echo "Vulnerability Audit Summary:"
        
          # Parse and format the audit report using jq
          cat npm_audit.json | jq -r '
            .vulnerabilities | to_entries[] | 
            {
              name: .value.name,
              severity: .value.severity,
              title: .value.via[0].title,
              url: .value.via[0].url,
              fixAvailable: .value.fixAvailable,
              range: .value.range
            } | 
            "Package: \(.name)\nSeverity: \(.severity)\nTitle: \(.title)\nURL: \(.url)\nFix Available: \(.fixAvailable)\nAffected Range: \(.range)\n"'
